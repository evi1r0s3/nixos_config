;;━━━ [window] bar ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(defwindow bar
  :monitor 0 ;;显示器
  :geometry (geometry :x "0%"
    :y "0px"
    :width "100%"
    :height "40px"
  :anchor "top center") ;;锚点
  ;;:stacking "fg" ;;层级，需要用fg,因为启动时hyprpaper换壁纸就会盖住bar
  :exclusive true ;;合成器是否要预留空间，以及预留的方法
  :focusable false
  :windowtype "dock"
  (bar)
)
;;━━━ [super widget] bar ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(defwidget bar []
  (box :orientation "horizontal" ;;横向
    (eventbox :halign "start"
      ;; :onclick "eww open dashboard"
      " EVANGELION 󱤓󱤓 󰫍󰫍󰫍󰫍󰫍󰫍 "
    )
    (box :halign "center"
      (time)
    )
    (box :halign "end"
       :space-evenly "false"
      (brightness)
      (speaker)
      (mic)
      (battery)
      (network)
    )
  )
)
;;━━━ [window] dashboard ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(defwindow dashboard
  :monitor 0 ;;显示器
  :geometry (geometry :x "0%"
    :y "0%"
    :width "50%"
    :height "20%"
  :anchor "top center") ;;锚点
  :stacking "fg" ;;层级
  :exclusive false ;;合成器是否要预留空间，以及预留的方法
  :focusable false
  (dashboard)
  ; "never settle" ;;显示的字符串
)
;;━━━ [super widget] dashboard ━━━━━━━━━━━━━━━━━━━━━━━━━
(defwidget dashboard []
  (box :orientation "vertical" ;;纵向
    (box :valign "start"
      "start"
    )
    (box :valign "center"
      "center"
    )
    (box :valign "end"
      "end"
      (box :orientation "horizontal"
        (eventbox :onclick "eww close dashboard"
          :halign "end"
          :width 50
        )
      )
    )
  )
)

;;━━━ [widget] Time ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(defpoll hour :interval "10s" "date +%H")
(defpoll minute :interval "10s" "date +%M")
(defpoll dateVar :interval "600s" "date '+%A %Y-%m-%d'")

(defwidget time []
  (eventbox :tooltip "${dateVar}"
    :onclick "eww open time-window"
    "${dateVar} ${hour}:${minute}"
  )
)
(defwidget time-window []
  (box :orientation "vertical" ;;纵向
       :space-evenly false
    (calendar :year "data +%Y"
      :month "date +%m"
      :day "date +%d"
      :show-details true
      :show-heading true
      :show-day-names true
      :show-week-numbers false
    )
      (box :orientation "horizontal"
        (eventbox :onclick "eww close time-window"
          :halign "center"
          :width 100
          "  󰅝  "
        )
      )
  )
)
(defwindow time-window
  :monitor 0
  :geometry (geometry :height "200px"
    :width "400px"
    :x "0px"
    :y "0px"
    :anchor "top center"
  )
  :stacking "fg" ;;层级
  :exclusive false ;;合成器是否要预留空间，以及预留的方法
  :focusable false
  (time-window)
)
;;━━━ [widget] brightness ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(defpoll brightness :interval "1s" "scripts/brightness.sh")
(defwidget brightness []
  (eventbox "${brightness} ")
)
;;━━━ [widget] Speaker Volume ━━━━━━━━━━━━━━━━━━━━━━━━━━━
(defpoll speaker-volume :interval "1s"
  :initial "50"
"scripts/volume.sh --volume")
(defpoll speaker-icon :interval "1s" "scripts/volume.sh --icon")

(defwidget speaker []
        (box :space-evenly "false" :orientation "h" :spacing "1"
        (eventbox :onclick "scripts/volume.sh --set-mute" :width 50 "${speaker-icon}")
        (scale :min 0
               :max 101
               :width 100
               :height 50
                     :orientation "horizontal"
                     :flipped true
                     :value speaker-volume
                     :onchange "scripts/volume.sh --set-volume $(echo {} | sed 's/[.].*$//')"
              )
    )
 )
;;━━━ [widget] mic_Volume ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(defpoll mic-volume :interval "1s"
  :initial "50"
  "scripts/volume.sh --mic-volume"
)
(defpoll mic-icon :interval "1s" "scripts/volume.sh --mic-icon")

(defwidget mic []
  (box :space-evenly "false" :orientation "h" :spacing "1"
       (eventbox :onclick "scripts/volume.sh --set-mic-mute" :width 50 "${mic-icon}")
       (scale :min 0
              :max 101
              :width 100
              :height 50
              :orientation "horizontal"
              :flipped true
              :value mic-volume
              :onchange "scripts/volume.sh --set-mic-volume $(echo {} | sed 's/[.].*$//')"
      )
  )
)
;;━━━ [widget] battery ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(defpoll battery :interval "2s"
                 :initial "{\"icon\": \"?\", \"charging\": \"?\", \"percentage\": \"?\", \"note\": \"正在初始化\"}"
                 "scripts/battery.sh")

(defwidget battery []
  (eventbox :onhover "notify-send -u normal \"电池状态\" \"当前电量：${battery.percentage}%\\n充电状态：${battery.charging}\\n剩余时间：${battery.note}\""
    :width 50
    "${battery.icon}"
  )
)

(defwidget battery-window []
    (box :orientation "vertical"
      :halign "center"
      (box :space-evenly false
        (label :text "当前电量：")
        (label :text "${battery.percentage}%")
      )
      (box :space-evenly false
        (label :text "充电状态：")
        (label :text "${battery.charging}")
      )
      (box :space-evenly false
        (label :text "剩余时间：")
        (label :text "${battery.note}")
      )
      (box :orientation "horizontal"
        (eventbox :onclick "eww close battery-window"
          :halign "center"
          :width 100
          "  󰅝  "
        )
      )
    )
)
(defwindow battery-window
  :monitor 0
  :geometry (geometry :height "100px"
    :width "200px"
    :x "0px"
    :y "0px"
    :anchor "top right"
  )
  :stacking "fg" ;;层级
  :exclusive false ;;合成器是否要预留空间，以及预留的方法
  :focusable false
  (battery-window)
)
;;━━━ [widget] network ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
(defpoll network :interval "2s"
  :initial "?"
  "scripts/network.sh")
(defvar ipaddr "{\"wanip\":\"\",\"vendor\":\"\",\"addr\":\"\",\"lanip\":\"\"}")

(defwidget network []
  ;;(eventbox :onhover "eww close battery-window & eww open network-window && scripts/ipaddress.sh &" ;; 因为获取ip地址需要一定资源，所以只在悬停时获取
  (eventbox :onhover "scripts/ipaddress.sh && notify-send -u normal \"网络状态\" \"出口地址：${ipaddr.wanip}\\n物理地址:${ipaddr.addr} @ ${ipaddr.vendor}\\n内网地址：${ipaddr.lanip}\""
    :onclick "hyprctl dispatch exec '[center]' 'kitty -T \"nmtui\" nmtui' "
    :width 50
    "${network}"
  )
)
(defwidget network-window []
    (box :orientation "vertical"
      :space-evenly false
      (box :space-evenly false
        (label :text "当前流量：")
        (label :text "${round(EWW_NET.wlan0.NET_UP / 1000, 2)} KB | ${round(EWW_NET.wlan0.NET_DOWN / 1000, 2)} KB")
      )
      (box :space-evenly false
        (label :text "出口地址：")
        (label :text "${ipaddr.wanip}")
      )
      (box :space-evenly false
        (label :text "物理地址：")
        (label :text "${ipaddr.addr}|${ipaddr.vendor}")
      )
      (box :space-evenly false
        (label :text "内网地址：")
        (label :text "${ipaddr.lanip}")
      )
      (box :orientation "horizontal"
        (eventbox :onclick "eww close network-window"
          :halign "center"
          :width 100
          "  󰅝  "
        )
      )
    )
  ;;)
)
(defwindow network-window
  ;;(eventbox 
    ;;:onhoverlost "eww close network-window"
    ;;:onhover "eww open network-window"
  :monitor 0
  :geometry (geometry :height "100px"
    :width "100px"
    :x "0px"
    :y "0px"
    :anchor "top right"
  )
  :stacking "fg" ;;层级
  :exclusive false ;;合成器是否要预留空间，以及预留的方法
  :focusable false
  (network-window)
)
